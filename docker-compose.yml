version: '3.8'

services:

  orders-db:
    image: postgres:15
    container_name: orders-db
    environment:
      POSTGRES_DB: ordersdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - orders_db_data:/var/lib/postgresql/data

  payments-db:
    image: postgres:15
    container_name: payments-db
    environment:
      POSTGRES_DB: paymentsdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - payments_db_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"       
      - "15672:15672"     
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  orders-service:
    build:
      context: ./OrdersService
    container_name: orders-service
    ports:
      - "5050:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      rabbitmq:
        condition: service_healthy
      orders-db:
        condition: service_started

  payments-service:
    build:
      context: ./PaymentsService
    container_name: payments-service
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80  
    depends_on:
      rabbitmq:
        condition: service_healthy
      payments-db:
        condition: service_started

  api-gateway:
    build:
      context: ./ApiGateway
    container_name: api-gateway
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80   
    depends_on:
      orders-service:
        condition: service_started
      payments-service:
        condition: service_started

volumes:
  orders_db_data:
  payments_db_data: